pvc:
persistent volume claim

volume overview:
some type of mechanism that allows a container to access a filesystem outside itself
data in the pod isnt stored any where, if it crashes or needs to be recreated then the data is lost
volumes solve this:
the volume will exist on the "host machine"

you dont want to spin up multipe replicas of postgres or any other DB and have them write to the
same volume ---> bad practice, will cause many issues and probelms

volume in the world of k8s:
an object that allows a container to store data at the pod level

k8 volume is tied directly to a very specific pod, can be accessed by any container in the pod
downside, if is there is an issue w/ the pod, the volume goes away.
not appropriate for storing data per issues of loss

persistent volume exists outside of the pods and completely independant 
if there is an issue with the pod the data will be saved and still can be accessed

persistent volume claim
pod configurations ---> kubernetes ---> statically provisioned persistent volume(immediatly avaiable) or
---> dynamically provisioned persistent volume(needs to be create to meet your request)

remember a volume claim is not an instance of storage
a volume claim is something that is going to be attached to a volume config
pods config goes to kubernetes and looks for statically or dynamically provisioned volumes

volume claim has to be setup for the postgres to store data in

access modes: 3 types
ReadWriteOnce, can only be used by a single node
ReadOnlyMany, multiple nodes can read from
ReadWriteMany, can be read and written to by many nodes

kubectl get stroageclass
kubectl describe stotageclass
many many options in the cloud, has to be defined in the config file, used the default with the provider



